version: '3.8'

services:
  workAppFront:
    container_name: workApp_frontend
    image: nginx:1.3
    ports:
      - "80:80"
    restart: always
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build: ./frontend_web/build/
    networks:
      workAppNet:
        ipv4_address: 172.20.0.10
    # build: 
    #   context: ./frontend/build/Dockerfile #原路徑
    #   dockerfile: ./frontend/build/Dockerfile #備用路徑

  # workAppBack:
  #   container_name: workApp_backend
  #   # ports:
  #   #   - "5001:5001"
  #   expose:
  #     - 4000
  #   stdin_open: true # docker run -i
  #   tty: true        # docker run -t
  #   build: ./backend/
    
  #   command: >
  #     bash -c ""
  #   networks:
  #     workAppNet:
  #       ipv4_address: 172.20.0.5

  dajia_redis:
    image: redis
    container_name: workApp_redis
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    volumes:
      - ./volume/redis:/data
    expose:
      - 6379
    # command: >
    #   bash -c "redis-server --daemonize yes"
    networks:
      workAppNet:
        ipv4_address: 172.20.0.3

  dajia_mysql:
    image: mysql:8
    container_name: workApp_mysql
    volumes:
      - ./volume/mysql:/var/lib/mysql
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      MYSQL_ROOT_PASSWORD: siou0722
      #  MYSQL_USER: wordpress
      #  MYSQL_PASSWORD: wordpress
      MYSQL_DATABASE: workApplication
      expose: 3306
    # ports:
    #   - "3306:3306"
    networks:
      workAppNet:
        ipv4_address: 172.20.0.2



networks:
  workAppNet:
    name: workAppNet
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24